---
- name: Purge old {{project}} configuration files
  file: path=/etc/{{project}} state=absent
  become: yes
  tags: config, config-purge

- name: Create config directory
  file: path=/etc/{{project}} state=directory
  become: yes
  tags: config, config-init

- name: Configure {{project}}
  template: src="{{item}}.j2" dest=/etc/{{project}}/{{item}}
  with_items: "{{ _config.config_files }}"
  become: yes
  tags: config, config-save

- name: Create ml plugins config directory
  file: path=/etc/neutron/plugins/ml2 state=directory
  when: project == "neutron"
  become: yes
  tags: config, config-ml2

- name: Configure {{project}}
  template: src="{{project}}-{{item.key}}-config-template.j2" dest=/etc/{{project}}/{{item.value}}
  with_dict: "{{ml2_plugins | default({})}}"
  become: yes
  when: project == "neutron"
  tags: config, config-ml2

- name: Copy {{project}} API configs
  command: "cp {{sample_config_dir}}/{{item}} /etc/{{project}}/{{item}}"
  become: yes
  with_items:
    "{{ _config.api_paste_files }}"
  tags: config, config-api

- name:
    Generate policy file
  command:
    "{{ virtualenv_bin }}/tox -egenpolicy"
  args:
    chdir:
      "{{ source.path }}"
  tags:
    config, config-policy
  when:
    _config.generate_policy

- name: Copy {{project}} policy configs
  command: "cp {{sample_config_dir}}/{{item}} /etc/{{project}}/{{item}}"
  become: yes
  with_items:
    "{{ _config.policy_files }}"
  tags: config, config-policy

- name: Copy additional configuration files for {{project}}
  command: "cp {{sample_config_dir}}/{{item}} /etc/{{project}}/{{item}}"
  with_items:
    "{{extra_config | default([])}}"
  become: yes
  tags: config, config-extra

- name: Initialize log directory
  file: path=/var/log/{{ project }} state=directory
  become: yes
  tags: config, config-log-dir
